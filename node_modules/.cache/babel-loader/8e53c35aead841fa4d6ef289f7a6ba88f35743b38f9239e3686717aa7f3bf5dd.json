{"ast":null,"code":"import * as Yup from 'yup';\nexport const registerInitialValues = {\n  email: '',\n  password: '',\n  name: '',\n  password_confirmation: ''\n};\nexport const registerValidationSchema = {\n  name: Yup.string().required(\"name is required\"),\n  email: Yup.string().email().required(\"email is required\")\n  // password: Yup.string().required(\"password is required\").matches(\n  //     /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\n  //     \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\n  //   ),\n  // password_confirmation: Yup.string().required(\"confirm password is required\").oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n};","map":{"version":3,"names":["Yup","registerInitialValues","email","password","name","password_confirmation","registerValidationSchema","string","required"],"sources":["/home/meghnab/Desktop/back/attendance_system/src/validation/authValidation.js"],"sourcesContent":["import * as Yup from 'yup'\n\nexport const registerInitialValues = {\n    email: '',\n    password: '',\n    name: '',\n    password_confirmation: '',\n}\nexport const registerValidationSchema = {\n    name: Yup.string().required(\"name is required\"),\n    email: Yup.string().email().required(\"email is required\"),\n    // password: Yup.string().required(\"password is required\").matches(\n    //     /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/,\n    //     \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character\"\n    //   ),\n    // password_confirmation: Yup.string().required(\"confirm password is required\").oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,OAAO,MAAMC,qBAAqB,GAAG;EACjCC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,IAAI,EAAE,EAAE;EACRC,qBAAqB,EAAE;AAC3B,CAAC;AACD,OAAO,MAAMC,wBAAwB,GAAG;EACpCF,IAAI,EAAEJ,GAAG,CAACO,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,kBAAkB,CAAC;EAC/CN,KAAK,EAAEF,GAAG,CAACO,MAAM,CAAC,CAAC,CAACL,KAAK,CAAC,CAAC,CAACM,QAAQ,CAAC,mBAAmB;EACxD;EACA;EACA;EACA;EACA;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}